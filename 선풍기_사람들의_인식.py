# -*- coding: utf-8 -*-
"""선풍기 사람들의 인식.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-DtNByxN0f5D6Kpy4y95vPAylNCETHdp
"""

# Commented out IPython magic to ensure Python compatibility.
'''
!apt-get install fonts-nanum*
!apt-get install fontconfig
!fc-cache -fv
!cp /usr/share/fonts/truetype/nanum/Nanum* /usr/local/lib/python3.6/dist-packages/matplotlib/mpl-data/fonts/ttf/
!rm -rf /content/.cache/matplotlib/*
'''

# %matplotlib inline
# %config InlineBackend.figure_format='retina'
path = '/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf'
import matplotlib.font_manager as fm
fontprop = fm.FontProperties(fname=path, size=12)

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import collections

from google.colab import auth
auth.authenticate_user()   # 사용자 인증
import gspread
from oauth2client.client import GoogleCredentials
gc = gspread.authorize(GoogleCredentials.get_application_default())  # 스프레드시트 사용 권한을 gc에 저장
worksheet = gc.open_by_url('https://docs.google.com/spreadsheets/d/1IKOzCkF7T_XK6iXj70BYJprxHEMmp4qXRIxX666NgkU/edit#gid=216037538').sheet1  # 스프레드시트를 오픈
rows = worksheet.get_all_values()  # 스프레드시트를 읽음(모든 셀의 값을 문자열 형식의 리스트의 리스트를 반환)
df = pd.DataFrame.from_records(rows[1:], columns=rows[0])


display(df)
df1 = df['집에서 사용하는 선풍기 날개 엽의 개수'].str.split(',')
df2=[]
df3=[]

display(df1)

#df1 = df1.str.rstrip('개').astype(int)
df2 = df['바람의 세기가 가장 강할것 같은 날개 엽의 개수'].sort_values()#.str.rstrip('개').astype(int)
df3 = df['소음이 가장 적을것 같은 선풍기 날개 엽의 개수'].sort_values()#.str.rstrip('개').astype(int)
display(df2)

plt.title('바람의 세기가 가장 강할것 같은 날개 엽의 개수',fontproperties=fontprop)
hist = collections.Counter(df2)
ind = np.arange(len(hist))
plt.bar(ind, hist.values(), width=0.3, color='red')
plt.xticks(ind, hist.keys(), fontproperties=fontprop)
plt.xlabel('날개 엽의 개수', fontproperties=fontprop)
plt.ylabel('선택한 사람의 수', fontproperties=fontprop)
plt.show()


plt.title('소음이 가장 적을것 같은 선풍기 날개 엽의 개수',fontproperties=fontprop)
hist = collections.Counter(df3)
ind = np.arange(len(hist))
plt.bar(ind, hist.values(), width=0.5, color='blue')
plt.xticks(ind, hist.keys(), fontproperties=fontprop)
plt.xlabel('날개 엽의 개수', fontproperties=fontprop)
plt.ylabel('선택한 사람의 수', fontproperties=fontprop)
plt.show()

'''
df0= df[df['성별'] == '남성']
df1= df[df['성별'] == '여성']
plt.scatter(df0['몸무게'].astype(int), df0['키'].astype(int), s=15, c='b', label='Men')
plt.scatter(df1['몸무게'].astype(int), df1['키'].astype(int), s=15, c='r', label='Women')
plt.legend()
plt.title('BMI')
plt.xlabel('Weight')
plt.ylabel('Height')
plt.show()

plt.figure(figsize=(10, 7))
hist = collections.Counter(df['bmi'].astype(float))
ind = np.arange(len(hist))
plt.bar(ind, hist.keys(), width=0.5, color ='blue')
plt.xticks(ind, df['이름'],fontproperties=fontprop)
plt.title('BMI')
plt.xlabel('Name')
plt.ylabel('BMI')
plt.show()

plt.figure(figsize=(10, 7))
hist = collections.Counter(df['판정'])
ind = np.arange(len(hist))
plt.bar(ind, hist.values(), width=0.5, color ='red')
plt.xticks(ind, hist.keys(), fontproperties=fontprop)
plt.title('BMI')
plt.xlabel('Category')
plt.ylabel('People')
plt.show()
'''